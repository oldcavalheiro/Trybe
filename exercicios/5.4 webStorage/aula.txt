utilizamos Cookies quando precisamos dos dados no cliente(browser) e no servidor,
pois os Cookies são enviados para o servidor a cada requisição

document.cookie = "email=isabella@email.com; expires=Thu, 17 Dec 2020 12:00:00 UTC; path=/";

.setItem
.getItem
.removeItem
.clear

****************** localStorage: *********************
sem data de experação e devem ser explicitamente removidos

// não possui nada salvo, então o retorno é o valor: 0
console.log(localStorage.length) 

//salva uma entrada com a key = "firstname" e value = "Adam"
localStorage.setItem("firstname", "Adam") 

//salva uma entrada com a key = "lastname" e value = "Smith"
localStorage.setItem("lastname", "Smith") 

// retorna o valor "Smith"
console.log(localStorage.getItem("lastname")) 

// possui duas entradas, então o retorno é o valor: 2
console.log(localStorage.length) 

// remove a entrada referente a key = "lastname"
localStorage.removeItem("lastname") 

// possui uma entrada, então o retorno é o valor: 1
console.log(localStorage.length) 

// limpa todas as entradas salvas em localStorage
localStorage.clear() 

// não possui nada salvo, então o retorno é o valor: 0
console.log(localStorage.length) 


********************** sessionStorage: *********************
salva dados sessão atual e removidos qnd aba fecha

// não possui nada salvo, então o retorno é o valor: 0
console.log(sessionStorage.length) 

//salva uma entrada com a key = "firstname" e value = "Adam"
sessionStorage.setItem("firstname", "Adam")

//salva uma entrada com a key = "lastname" e value = "Smith"
sessionStorage.setItem("lastname", "Smith") 

// retorna o valor "Smith"
console.log(sessionStorage.getItem("lastname"))

// possui duas entradas, então o retorno é o valor: 2
console.log(sessionStorage.length) 

// remove a entrada referente a key = "lastname"
sessionStorage.removeItem("lastname") 

// possui uma entrada, então o retorno é o valor: 1
console.log(sessionStorage.length) 

// limpa todas as entradas salvas em sessionStorage
sessionStorage.clear() 

// não possui nada salvo, então o retorno é o valor: 0
console.log(sessionStorage.length) 


//****************** 
// É possível salvar outras estruturas em localStorage e sessionStorage :

let organization = {
  name: "trybe",
  since: 2019
}

// objeto "storage" pode ser localStorage ou sessionStorage

storage.setItem("trybe", JSON.stringify(organization))
let org = JSON.parse(storage.getItem("trybe"))
console.log(org) // { name: "trybe", since: 2019 }

let classes = ["2019/set", "2019/oct"]
storage.setItem("classes", JSON.stringify(classes))
let cls = JSON.parse(storage.getItem("classes"))
console.log(cls) // ["2019/set", "2019/oct"]



